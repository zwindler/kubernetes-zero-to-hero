---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  namespace: webapp-prod
  labels:
    app: webapp
spec:
  selector:
    app: webapp
    version: v1  # Permet le routage Blue/Green
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  namespace: webapp-prod
  labels:
    app: webapp
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
        version: v1
    spec:
      containers:
      - name: webapp
        image: zwindler/webapp-python:v1.0.0
        ports:
        - containerPort: 5000
          name: http
        # TODO: ajouter une variable d'environnement FLASK_ENV=production
        # TODO: ajouter des variables d'environnement à partir du ConfigMap webapp-config
        # TODO: ajouter la gestion des limits/requests
        # 128 MiB de mémoire et 250m de CPU en request sont largement suffisants pour cette application
        startupProbe:
          # TODO: configurer startup probe sur /startup avec délai approprié
        livenessProbe:
          # TODO: configurer liveness probe sur /health
        readinessProbe:
          # TODO: configurer readiness probe sur /ready
        # Bonnes pratiques de sécurité
        # Nous les verrons plus en détail dans les modules suivants
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL